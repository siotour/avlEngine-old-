#pragma once
#ifndef AVL_MODEL_ACTION__
#define AVL_MODEL_ACTION__
/* Copyright 2012 Sheldon Bachstein
This file is part of the avl Library.

The avl Library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

The avl Library is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with the avl Library.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
@file
<Autogenerated stub>
@author Sheldon Bachstein
@date Jun 26, 2012
*/

#include<queue>

namespace avl
{
namespace model
{
	// Forward declaration.
	class Action;


	/** A structure for passing groups of Actions together.
	*/
	typedef std::queue<const Action> ActionQueue;


	/**
	The base class of the Action hierarchy. Actions represent
	discrete events in the model space which agents may react to.
	*/
	class Action
	{
	public:
		/** Basic constructor.
		*/
		Action();

		/** Copy constructor.
		@param original The object being copied.
		*/
		Action(const Action& original);

		/** Basic destructor.
		*/
		virtual ~Action();

	private:

		/// NOT IMPLEMENTED.
		const Action& operator=(const Action&);
	};


	/**
	Indicates that agents should update their state with respect to some
	amount of elapsed time.
	*/
	class TimeStep: public Action
	{
	public:
		/** Basic constructor.
		*/
		TimeStep(const double& initial_elapsed_time);

		/** Basic destructor.
		*/
		~TimeStep();

		/** Gets the amount of elapsed time.
		@return The elapsed time in seconds.
		*/
		const double& GetElapsedTime() const;

	private:
		/// The amount of elapsed time for which to update.
		const double elapsed_time;
	};



} // model
} // avl
#endif // AVL_MODEL_ACTION__
